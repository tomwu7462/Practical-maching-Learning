{"name":"Practical-maching-learning","tagline":"Practical machine learning","body":"---\r\ntitle: \"Practical Machine Learning\"\r\nauthor: \"Sang Hua\"\r\ndate: \"Tuesday, September 15, 2015\"\r\noutput: html_document\r\n---\r\nIn prediction of classe in the training set,  I split the pml.training into training and testing first.  I will use 75 percent of the pml.training records\r\nfor training the model and the other 25% to test my model.  I expect the out of sample error rate to be higher than the in sample error rate.\r\n\r\nAfter that, I removed those fields that I have identified to contribute nothing according to the nearZeroVar function.  After that, I removed fields that have\r\nhigh percent of missing values.\r\n\r\nSince the dependent variable is classe which is a factor, I am limited to decision tree and linear discriminant function.  I ran caret package using the rpart. and varImp function and was able to identify X, roll_belt, accel_belt_z, magnet_belt_y, pitch_forearm,\r\ntotal_accel_belt as fields that are powerful in predicting classe.  The field X is by far the most powerful predictor of all.  I can use X only and be able\r\nto predict classe in the testing and the 20 cases with pretty accurate.  It seems the way the order of data by row and classe are related.\r\nIn the assignment, it was stated that all fields are available to be used for prediction.\r\n```{r}\r\n##Machine Class Project\r\n\r\nlibrary(caret)\r\nlibrary(dplyr)\r\n\r\n##Exploring analysis\r\ntable(pml.training$classe)\r\nnrow(pml.training)\r\n\r\n##Since my pm.training sample is large enough, I like to split\r\n## some of that to testing as well\r\n\r\ninTrain <- createDataPartition(y=pml.training$classe, p=0.75, list=FALSE)\r\ntraining <- pml.training[inTrain,]\r\ntesting <- pml.training[-inTrain,]\r\n\r\nnames(training)\r\nnsv <- nearZeroVar(training,saveMetrics=TRUE)\r\nnames(nsv)\r\nnsv1 <- nsv[nsv$nzv == \"TRUE\",]\r\ntraining <- tbl_df(training)\r\n##want to remove variables that are near zero or have a lot of missing values since they will not contribute much to the prediction of classe\r\nmyvars <- names(training) %in% c(\"new_window\", \"kurtosis_roll_belt\",\"kurtosis_picth_belt\",\"kurtosis_yaw_belt\",\"skewness_roll_belt\",\"skewness_roll_belt.1\",\"skewness_yaw_belt\",\"max_yaw_belt\",\r\n\"min_yaw_belt\",\"amplitude_yaw_belt\",\"avg_roll_arm\",\"stddev_roll_arm\",\"var_roll_arm\",\"avg_pitch_arm\",\"stddev_pitch_arm\",\"var_pitch_arm\",\"avg_yaw_arm\",\r\n\"stddev_yaw_arm\",\"var_yaw_arm\",\"kurtosis_roll_arm\",\"kurtosis_picth_arm\",\"kurtosis_yaw_arm\",\"max_roll_arm\",\"min_roll_arm\",\"min_pitch_arm\",\"amplitude_roll_arm\",\r\n\"kurtosis_roll_dumbbell\",\"kurtosis_picth_dumbbell\",\"kurtosis_yaw_dumbbell\",\"skewness_roll_dumbbell\",\"skewness_pitch_dumbbell\",\"skewness_yaw_dumbbell\",\r\n\"max_yaw_dumbbell\",\"min_yaw_dumbbell\",\"amplitude_yaw_dumbbell\",\"kurtosis_roll_forearm\",\"kurtosis_picth_forearm\",\"kurtosis_yaw_forearm\",\"skewness_roll_forearm\",\"skewness_pitch_forearm\",\r\n\"skewness_yaw_forearm\",\"skewness_roll_forearm\",\"skewness_pitch_forearm\",\"skewness_yaw_forearm\",\"max_yaw_forearm\",\"min_yaw_forearm\",\"amplitude_yaw_forearm\",\"stddev_roll_forearm\",\r\n\"var_roll_forearm\",\"avg_pitch_forearm\",\"stddev_pitch_forearm\",\"var_pitch_forearm\",\"avg_yaw_forearm\",\"stddev_yaw_forearm\",\"var_yaw_forearm\",\"user_name\",\"cvtd_timestamp\",\"skewness_roll_arm\",\"skewness_pitch_arm\",\"skewness_yaw_arm\",\r\n\"max_roll_belt\",\"max_picth_belt\",\"min_roll_belt\",\"min_pitch_belt\",\"amplitude_roll_belt\",\"amplitude_pitch_belt\",\"var_total_accel_belt\",\"avg_roll_belt\",\"stddev_roll_belt\",\"var_roll_belt\",\"avg_pitch_belt\",\"stddev_pitch_belt\",\r\n\"var_pitch_belt\",\"avg_yaw_belt\",\"stddev_yaw_belt\",\"var_yaw_belt\",\"max_picth_arm\",\"max_yaw_arm\",\"min_yaw_arm\",\"amplitude_pitch_arm\",\"amplitude_yaw_arm\",\"max_roll_dumbbell\",\"max_picth_dumbbell\",\"min_roll_dumbbell\",\"min_pitch_dumbbell\",\r\n\"amplitude_roll_dumbbell\",\"amplitude_pitch_dumbbell\",\"var_accel_dumbbell\",\"avg_roll_dumbbell\",\"stddev_roll_dumbbell\",\"var_roll_dumbbell\",\"avg_pitch_dumbbell\",\"stddev_pitch_dumbbell\",\"var_pitch_dumbbell\",\"avg_yaw_dumbbell\",\"stddev_yaw_dumbbell\",\r\n\"var_yaw_dumbbell\",\" max_roll_forearm\",\"max_picth_forearm\",\"min_roll_forearm\",\"min_pitch_forearm\",\" amplitude_roll_forearm\",\"amplitude_pitch_forearm\",\"var_accel_forearm\",\"avg_roll_forearm\",\"var_accel_arm\",\"max_roll_forearm\",\"amplitude_roll_forearm\",\r\n\"max_roll_forearm\",\"amplitude_roll_forearm\",\"var_accel_arm\") \r\ntraining2 <- training[!myvars]\r\nstr(training2)\r\nnames(training2)\r\n\r\nt<-sapply(training2, function(x) sum(is.na(x)))\r\nvar.test(training2$classe,training2$X)\r\n\r\n##Exploratory analysis\r\ntapply(training2$X,training2$classe,summary)\r\ntapply(training2$roll_belt,training2$classe,summary)\r\ntapply(training2$accel_belt_z,training2$classe,summary)\r\nlibrary(RANN)\r\n\r\n##Let's determine how many components\r\npreProc <- preProcess(training2[,-57],method=\"pca\",thresh=.90)\r\npreProc\r\n#try rpart to identify the key variables\r\nmodFit <- train(classe ~ ., method=\"rpart\", data=training2)\r\nprediction_tree <- cbind(testing$classe,predict(modFit,testing))\r\ntable(prediction_tree[,1],prediction[,2])\r\nprediction_tree1 <- cbind(pml.testing$classe_num,predict(modFit,pml.testing))\r\ntable(prediction_tree1[,1],prediction_tree1[,2])\r\n\r\nvarImp(modFit, scale = FALSE)\r\n\r\nprint(modFit$finalModel)\r\n\r\n#lda\r\nmodlda = train(classe ~ ., data=training2,method=\"lda\")\r\nwarnings()\r\nmodlda$finalModel\r\nprediction<-cbind(testing$classe,predict(modlda,testing))\r\ntable(prediction[,1],prediction[,2])\r\nprediction1<-cbind(pml.testing$classe_num,predict(modlda,pml.testing))\r\ntable(prediction1[,1],prediction1[,2])\r\n```\r\n\r\nYou can also embed plots, for example:\r\n\r\n```{r, echo=FALSE}\r\nqplot(X,accel_belt_z,colour=classe,data=training2)\r\nqplot(X,accel_belt_z,colour=classe,data=testing)\r\n```\r\n\r\nNote that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}